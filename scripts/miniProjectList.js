export const LIST_OF_MINI_PROJECTS = [
  {
    fontAwesomeIcon: `fab fa-wpforms`,
    title: `Form Validator`,
    folderName: `Form Validator`,
    description: `A Basic Registeration Form that ask's the user for a username, email, password and re-enter password. This implements some basic <strong>Form Validation</strong> as mandatory checks, password checks and deals with basic DOM manipulation`,
    credit: `Part of Brad Traversy's JavaScript Course`,
  },
  {
    fontAwesomeIcon: `fas fa-pencil-ruler`,
    title: `Etch a Sketch`,
    folderName: `Etch a Sketch`,
    description: `I still remember Joey and Chandler having one of these. This is an online etch a sketch built using the <strong>Canvas Element</strong> and basic ctx commands - beginPath, moveTo, lineTo, stroke. Also used keyframes to mimic a shake`,
    credit: `Part of Wes Bos Beginner JS Program`,
  },
  {
    fontAwesomeIcon: `fas fa-film`,
    title: `Movie Seat Selector`,
    folderName: `Movie-Seat-Booking`,
    description: `A very simple Movie Seat Booking application which implements basic <strong>Event Handling</strong> on changes in drop down values and click events which would update DOM elements. Additionally, this also contains using the <strong>Local Storage</strong> to temporarily save the selected movie and seats`,
    credit: `Part of Brad Traversy's JavaScript Course`,
  },
  {
    fontAwesomeIcon: `fab fa-youtube`,
    title: `Customer Video Player`,
    folderName: `HTML5 Video API`,
    description: `This was a fun way of exploring the APIs coming in with the <strong>Video Element</strong>
    which
    included stop, pause, play & even a nice slider tracking the time which can be moved around as
    well`,
    credit: `Part of Brad Traversy's JavaScript Course`,
  },
  {
    fontAwesomeIcon: `far fa-money-bill-alt`,
    title: `Exchange Rate Calculator`,
    folderName: `Exchange Rate Calculator`,
    description: ` A simple exchange rate calculator which made use of the api.exchangeratesapi.io to convert one currency to another. This was doing using <strong>Async Await</strong>`,
    credit: `Part of Brad Traversy's JavaScript Course`,
  },
  {
    fontAwesomeIcon: `fas fa-layer-group`,
    title: `Array Methods Excercise`,
    folderName: `Array Methods`,
    description: `Not the most useful of apps, but this code basically helps the coder understand the popular <strong>Array methods</strong> used in JavaScript. This also uses Async await when fetching a random user from the randomuser.me API. The methods implemented are <strong>map, sort, filter & reduce</strong>`,
    credit: `Part of Brad Traversy's JavaScript Course`,
  },
  {
    fontAwesomeIcon: `fas fa-gamepad`,
    title: `Pokedex`,
    folderName: `Pokedex`,
    description: `This was a really fun simple project using the https://pokeapi.co/api/v2 API to get information about the first gen Pokemon. The rest is just DOM manipulation and pretty cool styling`,
    credit: `Part of Florin Pop's Youtube series`,
    highlight: true,
  },
  {
    fontAwesomeIcon: `fas fa-angle-right`,
    title: `Menu Slider and Modal Pop-up`,
    folderName: `Menu Slider and Modal`,
    description: `A simple solution implementing 2 common usecases - a menu that is displayed as a button & slides from the left pane. And a Sign up Modal which darkens the background and comes as a <strong>Popup</strong>. This also uses a CSS keyframe for some animation.`,
    credit: `Part of Brad Traversy's JavaScript Course`,
  },
  {
    fontAwesomeIcon: `fas fa-male`,
    title: `HangMan (using SVG)`,
    folderName: `HangMan with SVG`,
    description: `A simple HangMan game that makes use of <strong>SVG</strong> to draw the hangman with each wrong letter that is prompted by the user. The user needs to type in the keyboard and those events are read and accordingly actions are done on the screen`,
    credit: `Part of Brad Traversy's JavaScript Course`,
  },
  {
    fontAwesomeIcon: `fas fa-image`,
    title: `Gallery with Pop ups`,
    folderName: `Click Outside Gallery`,
    description: `Another way to handle popups. The code checks if the parent is the modal using the 'e.target.closest()' method and the keydown event for escape to see if the modal needs to be closed. It also creates thep popup dynamically using the dataset attributes set to the cards in the CSS grid`,
    credit: `Part of Wes Bos Beginner JS Program`,
  },

  {
    fontAwesomeIcon: `fas fa-tags`,
    title: `A page with tabs`,
    folderName: `Tabs`,
    description: `Implementing a simple <strong>Tab</strong> functionality on a webpage`,
    credit: `Part of Wes Bos Beginner JS Program`,
  },

  {
    fontAwesomeIcon: `fas fa-hamburger`,
    title: `Meal Finder`,
    folderName: `MeanFinder`,
    description: `An App to search for recipes using the API from www.themealdb.com which shows a real use case for <strong> Async Await </strong>. Otherwise contains a simple form, a random recipe option and some nice CSS using flexbox`,
    credit: `Part of Brad Traversy's JavaScript Course`,
  },
  {
    fontAwesomeIcon: `fas fa-wallet`,
    title: `Expense Tracker`,
    folderName: `Expense Tracker`,
    description: `A useful App to save your expenses. This uses <strong>Local Storage</strong> and basic <strong>Array Methods</strong> to manipulate the DOM according to the number and type of transactions that you have entered`,
    credit: `Part of Brad Traversy's JavaScript Course`,
  },
  {
    fontAwesomeIcon: `fas fa-music`,
    title: `MP3 Music Player`,
    folderName: `Music Player`,
    description: `Played around with the <strong>Audio Element</strong> over here and implemented play, pause, stop, next & previous for an mp3 player. Also did some nice keyframe animations to make the album art rotate while the music plays`,
    credit: `Part of Brad Traversy's JavaScript Course`,
  },

  {
    fontAwesomeIcon: `far fa-images`,
    title: `Gallery with Click outside to close`,
    folderName: `Gallery Click Outside`,
    description: `A small gallery that uses <strong>modals</strong> and the closest function to achieve the goal of closing a pop-up by clicking outside the pop-up or by hitting escape`,
    credit: `Part of Wes Bos Beginner JS Program`,
  },
  {
    fontAwesomeIcon: `fas fa-envelope-open`,
    title: `Memory Card Excercise`,
    folderName: `Memory Cards`,
    description: `This was an interesting memory app which lets the user store cards with 2 sides and has a nice animation for the flip and navigating between cards`,
    credit: `Part of Brad Traversy's JavaScript Course`,
  },
  {
    fontAwesomeIcon: `fas fa-music`,
    title: `Lyrics Finder`,
    folderName: `Lyrics Search`,
    description: `Using the api.lyrics.ovh API, a simple lyric finder was built using <strong>Async Await</strong>. `,
    credit: `Part of Brad Traversy's JavaScript Course`,
  },

  {
    fontAwesomeIcon: `fas fa-lungs`,
    title: `Breathing App`,
    folderName: `Relaxer App`,
    description: `A Simple breathing app making use of the <strong>Set Interval</strong> & <strong>Set Timeout</strong> functions along with keyframes to form a sleek UI`,
    credit: `Part of Brad Traversy's JavaScript Course`,
  },

  {
    fontAwesomeIcon: `fas fa-baseball-ball`,
    title: `Breakout Game`,
    folderName: `Breakout Game`,
    description: `Childhood game recreated. This game gives practice on the <strong>Canvas element</strong> and uses the <strong>requestAnimationFrame API</strong> to contiously refresh the screen. The remaining is a JS logic handling edge cases depending on the position of the paddle, ball and bricks.`,
    credit: `Part of Brad Traversy's JavaScript Course`,
  },
  {
    fontAwesomeIcon: `fas fa-clock`,
    title: `New Year Counter`,
    folderName: `New Year Counter`,
    description: `A Counter till the end of the year. This uses the <strong>Date JS Class</strong> to get the current timestamp and the SetInterval API to constantly update the timer`,
    credit: `Part of Brad Traversy's JavaScript Course`,
  },
  {
    fontAwesomeIcon: `far fa-keyboard`,
    title: `Async Typer`,
    folderName: `Async Typer`,
    description: `A simple typer that types 1 character at a time showcasing the use of the setTimeout method with async await, setting a different delay for each output`,
    credit: `Part of Wes Bos Beginner JS Program`,
  },

  {
    fontAwesomeIcon: `fas fa-sort-alpha-down`,
    title: `Drag & Drop List`,
    folderName: `Sortable List`,
    description: `Uses the <strong>Drag and Drop API</strong> to implement a list that is sortable by the user`,
    credit: `Part of Brad Traversy's JavaScript Course`,
  },
  {
    fontAwesomeIcon: `fas fa-comment`,
    title: `Speech Number Guessing Game`,
    folderName: `Speech Number Guessing Game`,
    description: `Uses the <strong>Experiemental Speech Recognition API</strong> to make the user speak out a world and manipulate the DOM based on the voice input. As this is an experiemental feature, it is suggested to use Chrome for this project`,
    credit: `Part of Brad Traversy's JavaScript Course`,
  },
  {
    fontAwesomeIcon: `fas fa-smile-wink`,
    title: `Dad Joke generator`,
    folderName: `Dad Jokes`,
    description: `This uses the API exposed by https://icanhazdadjoke.com to create a dad joke generator with the header option for the fetch call`,
    credit: `Part of Wes Bos Beginner JS Program`,
  },
  {
    fontAwesomeIcon: `fas fa-puzzle-piece`,
    title: `Simon Clicks`,
    folderName: `simon says game`,
    description: `A game based on the classic Simon says game instead here simon clicks. This was built using jQuery and deals with just handling DOM events and related JS manipulations`,
    credit: `Part of Angela Yu WebDev Bootcamp program`,
  },
  {
    fontAwesomeIcon: `fas fa-drum`,
    title: `Drum Kit`,
    folderName: `drumkit`,
    description: `A music app based on DOM Click and key board events using audio HTML Elements to mimic a drum kit built using vanilla Javascript`,
    credit: `Part of Angela Yu WebDev Bootcamp program`,
  },
  {
    fontAwesomeIcon: `fas fa-female`,
    title: `Make up Finder`,
    folderName: `Makeup Finder`,
    description: `An app that displays Maybelline products using the makeup-api.herokuapp.com API using JS. Simple extraction of data from the API and some JS array filter implementation`,
  },
];
